/*
* ------------------------------------------------------------------------------------------ 
* ALS4RPA - EXPERIMENT A 
* ------------------------------------------------------------------------------------------  
 
 Specification with the ITLingo ASL V.1.3 language 
 
 Authors: Carlos Correia and Alberto Rodrigues da Silva (Supervisor)  
 
 Created Date: 2022/February 
 Last Update:  2022/June      
 
 Copyright  --------- 
 2016-2022 Alberto Rodrigues da Silva (coordinator) et al., Instituto Superior Técnico, 
 Universidade de Lisboa. All rights reserved.  
 
 This material is available for academic, research and commercial purpose, however, You 
 should keep the authors and copyright notice.  
 Any use of this software constitutes full acceptance of all terms of the software's license.    
 
 Licence 
 ------- 
 
 This material is released under the Eclipse Public License (EPL) - Version 1.0. 
 http://www.eclipse.org/legal/epl-v10.html    
 
 General Information: ----------------- 

 */

Package ASL4RPA
    
Import ASL4RPALibraries.* 
   
System ExperimentA : Application [
	description 
	" Experimenty A refers to a software robot that automates simple mailbox-related tasks. 
    This scenario includes the following task: Read the new emails with a specific subject and 
    automatically reply to the sender. This scenario uses a Gmail account to read unread emails 
    from the mailbox in the inbox folder.
	In addition, it is necessary to set up the Gmail account to use the RPA tool, namely with the 
    following settings:
	1.	Go to the Less secure app access section of your Google Account. 
	2.	Turn Allow less secure apps off.
	The automatic reply involves the configuration of a mail body, mail subject and a specific 
    subject to find from the unread emails.  
	Besides that, this task includes the schedule the periods to run automatically. The research 
    used the Jenkins application for the solution based on the Robot Framework platform; for the 
    Robocorp, using the Cloud or Robocorp Assistant; and in UiPath, using the Cloud or UiPath Assistant."] 
  
Robot SendMailWithoutAttachments [description "As a User I want to send an email without Attachments" ]
begin                                                
	variable mailBody : String := "Good morning Dear Students, I inform you that due to the fact that I have been infected with COVID, I will not be able to teach classes next week. In this context, what is your availability in the following week to teach classes in the following periods: 1 - (24/04/22) from 2pm to 4pm. 2 - (25/04/22) from 20h to 22h. 3 - (26/04/22) from 1pm to 3pm."  	
	variable mailSubject : String := "GPI - Availability for booking classes"
	variable mailSender : String := "martelo.correia.rpa@gmail.com"   
	variable password : String := "istrpa2021"	
	variable emailToSent : String := "martelocorreia@gmail.com"
	     
	//Alternative Variables Declaration
	variable @mails : DataTable definedAs     
	[attribute mailBody : String,         
	 attribute mailSubject : String, 
	 attribute mailSender : String,
	 attribute password : String, 
	 attribute emailToSent : String]       
	:=            
	[[mailBody                     , mailSubject                              , mailSender                     , password     ,emailToSent               ]
	 ["Good morning Dear Students.",  "GPI - Availability for booking classes", "martelo.correia.rpa@gmail.com", "istrpa2021" ,"martelocorreia@gmail.com"]
	 ["Message generated by robot.",  "AMS - Availability for booking classes", "martelo.correia.rpa@gmail.com", "istrpa2021" ,"martelocorreia@gmail.com"]]
	  	                      
	UIMail.GmailSendMailWithNoAttachment   (mailSender, password, emailToSent, mailSubject, mailBody)
	   
	//Alternative RobotOperation
	UIMail.GmailSendMailWithNoAttachment    (@mails.mailSender[1], @mails.password[1], @mails.emailToSent[1], @mails.mailSubject[1], @mails.mailBody[1])
  
	//Another mail body and subject 
	UIMail.GmailSendMailWithNoAttachment    (@mails.mailSender[2], @mails.password[2], @mails.emailToSent[2], @mails.mailSubject[2], @mails.mailBody[2])
endRobot    
 
Robot SendMailWithAttachments [description "As a User I want to send an email with Attachments" ]
begin       	  
	//variable $filePath : String := "Demo.xls"
	variable filePath : String := "C:\\Users\\Administrador\\Desktop\\Demo.xls"
	
	UIMail.GmailSendMailWithAttachment    (SendMailWithoutAttachments.mailSender, SendMailWithoutAttachments.password, SendMailWithoutAttachments.emailToSent, SendMailWithoutAttachments.mailSubject, SendMailWithoutAttachments.mailBody, filePath)
     
	//Alternative RobotOperation
	UIMail.GmailSendMailWithAttachment    (@SendMailWithoutAttachments.mails.mailSender[1], @SendMailWithoutAttachments.mails.password[1], @SendMailWithoutAttachments.mails.emailToSent[1], @SendMailWithoutAttachments.mails.mailSubject[1], @SendMailWithoutAttachments.mails.mailBody[1], filePath)

	//Another mail body and subject   
	UIMail.GmailSendMailWithAttachment    (@SendMailWithoutAttachments.mails.mailSender[2], @SendMailWithoutAttachments.mails.password[2], @SendMailWithoutAttachments.mails.emailToSent[2], @SendMailWithoutAttachments.mails.mailSubject[2], @SendMailWithoutAttachments.mails.mailBody[2], filePath)  
endRobot    
 
Robot ReadAllInboxMail [description "As a User I want to read all emails in inbox folder in mailbox" ]
begin             
	
	UIMail.GmailReadAllInboxMail    (SendMailWithoutAttachments.mailSender, SendMailWithoutAttachments.password)
endRobot  

Robot ReadMailWithSpecificSubjectAndReply : Concrete [description "As a User I want to read all emails in inbox folder in mailbox and filter mails where the subject contains a certain value and send an email in that case" ]
begin        	
	variable specificSubject : String := "GPI - Availability for booking classes"
	 
	UIMail.GmailReadMailWithSpecificSubjectAndReply    (SendMailWithoutAttachments.mailSender, SendMailWithoutAttachments.password, SendMailWithoutAttachments.mailSubject, SendMailWithoutAttachments.mailBody, specificSubject)
endRobot

